version: "3.7"

services:
  backend:
    image: backend
    build:
      context: .
    container_name: backend
    ports:
      - "5000:8080"
    restart: on-failure
    depends_on:
      - database
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/versatile
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    expose:
      - 5000

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/frontend/src
    container_name: frontend

  database:
    image: postgres:latest
    container_name: database
    volumes:
      - /opt/postgres-data:/var/lib/postgresql/data
    ports:
      - "5001:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=versatile
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - 5001

#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zooleeper
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_ADVERTISED_PORT: 9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_DELETE_TOPIC_ENABLE: 'true'
#      KAFKA_CREATE_TOPICS: "Topic:1:1"